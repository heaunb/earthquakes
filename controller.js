/** * Created by heaun.b on 2016. 6. 11.. */var app = angular.module('earthquake.controller', [])app.controller("earthquakeController", ["$scope", "$http",    function ($scope, $http) {        trace("earthquakeController");        var map;        function readMapData() {            trace('readMapData');            //var data = MapData.all();            //var url = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojsonp";            var url = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.geojsonp";            $http.jsonp(url)        }        var arrResults = [];        window.eqfeed_callback = function (results) {            for (var i = 0; i < results.features.length; i++) {                var place = results.features[i].properties.place;                // trace(place);                if (place.indexOf('South Korea') > 0) {                    arrResults.push(results.features[i]);                }            }            for(var d in arrResults){                var coords = arrResults[d].geometry.coordinates;                //map                var latLng = new google.maps.LatLng(coords[1], coords[0]);                var marker = new google.maps.Marker({                    position: latLng,                    map: map                });                geocodeLatLng(coords);            }        }            trace(arrResults);            for(var d in arrResults){                var coords = arrResults[d].geometry.coordinates;                arrResults[d].properties.time =     new Date(arrResults[d].properties.time);                arrResults[d].properties.updated =  new Date(arrResults[d].properties.updated);            }            $scope.earthEquakes = arrResults;        window.initialize = function(){            trace("initialize");            map = new google.maps.Map(document.getElementById('map'), {                zoom: 10,                center: new google.maps.LatLng(35.732, 129.2058),                mapTypeId: google.maps.MapTypeId.ROADMAP            });        }        function onPositionToAddress(coords) {            trace("onPositionToAddress");            var lat = coords[1];            var lng = coords[0];            var url = "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + lat + "," + lng + "&sensor=true";            trace(url);            var dd = $http.get(url).then(function(result){                trace('result');                trace(result);                return result.data.results[2].formatted_address;            });            trace(dd);            return dd;        }        readMapData();        function geocodeLatLng(coords) {            trace("geocodeLatLng");            var latlng = new google.maps.LatLng(coords[1], coords[0]);            var geocoder = new google.maps.Geocoder;            var infowindow = new google.maps.InfoWindow;            geocoder.geocode({'location': latlng}, function(results, status) {                if (status === google.maps.GeocoderStatus.OK) {                    if (results[1]) {                        map.setZoom(11);                        var marker = new google.maps.Marker({                            position: latlng,                            map: map                        });                        infowindow.setContent(results[1].formatted_address);                        //infowindow.open(map, marker);                    } else {                        window.alert('No results found');                    }                } else {                    window.alert('Geocoder failed due to: ' + status);                }            });        }    }]);function trace(text) {    if (text[text.length - 1] === '\n') {        text = text.substring(0, text.length - 1);    }    if (window.performance) {    var now = (window.performance.now() / 1000).toFixed(3);    console.log(now + ': ' + text);    } else {        console.log(text);    }}